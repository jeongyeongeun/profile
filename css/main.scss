/*
 * Animation module with all animation code
 */
.anim-text-flow,
.anim-text-flow-hover:hover,
.top_btn,
.top_btn:hover,
.navbar-inverse {
    /*
    * Animation variables
    */
    $animationSteps: 20;
    $animationDuration: 50;
    $animationElement: span;
    $animationElementsCount: 100;
    $delayBetweenLetters: 0.2;

    /*
    * Elements settings
    */
    #{$animationElement} {
        animation-name: anim-text-flow-keys;
        animation-duration: #{$animationDuration}s;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        animation-fill-mode: forwards;
    }

    /*
    * Keyframe loop
    */
    @keyframes anim-text-flow-keys {
        @for $i from 0 through $animationSteps {
       #{percentage($i * (1 / $animationSteps))} {
            color: hsla(random(365), 60, 60, 1);
        }
        }
    }

    @keyframes anim-text-flow-keys1 {
        @for $i from 0 through $animationSteps {
       #{percentage($i * (1 / $animationSteps))} {
            background-color: hsla(random(365), 60, 60, 1);
        }
        }
    }

    /*
    * Element animation delay loop
    */
   $totalDelayTime: $animationElementsCount * $delayBetweenLetters;

    @for $i from 1 through $animationElementsCount {
        #{$animationElement}:nth-of-type(#{$i}) {
       animation-delay: #{($i * $delayBetweenLetters) - $totalDelayTime}s;
        }
    }
}


.top_btn,
.top_btn:hover {
    /*
    * Animation variables
    */
    $animationSteps: 20;
    $animationDuration: 50;
    $animationElement: span;
    $animationElementsCount: 100;
    $delayBetweenLetters: 0.2;

    /*
    * Elements settings
    */
    #{$animationElement} {
        animation-name: anim-text-flow-keys1;
        animation-duration: #{$animationDuration}s;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        animation-fill-mode: forwards;
    }

    /*
    * Keyframe loop
    */

    @keyframes anim-text-flow-keys1 {
        @for $i from 0 through $animationSteps {
       #{percentage($i * (1 / $animationSteps))} {
            background-color: hsla(random(365), 60, 60, 1);
        }
        }
    }

    /*
    * Element animation delay loop
    */
   $totalDelayTime: $animationElementsCount * $delayBetweenLetters;

    @for $i from 1 through $animationElementsCount {
        #{$animationElement}:nth-of-type(#{$i}) {
       animation-delay: #{($i * $delayBetweenLetters) - $totalDelayTime}s;
        }
    }
}

// 그래프 애니메이션

//Setup


@mixin stagger-anim-delay($i, $initial-delay, $stagger-delay) {
    @while $i > 0 {
    &:nth-of-type(#{$i}) {
      animation-delay: $initial-delay + $stagger-delay * $i;
    }
    $i: $i - 1;
    }
}

$baseFontSize: 16px;
$baseLineHeight: 1;

$chartGap: 10px;
$chartCount: 3;
$chartOneCount: 11;
$chartTwoCount: 2;
$chartThreeCount: 4;
$totalChartCount: $chartOneCount + $chartTwoCount + $chartThreeCount;

$titleGap: 10px;
$titleHeight: $baseFontSize * $baseLineHeight + $titleGap;

$chartBarHeight: 30px;
$chartBarGap: 10px;


//Demo
.skills {
    width: 80%;
    max-width: 1000px;
    height: 100px;
    height: $totalChartCount * ($chartBarHeight + $chartBarGap) + ($chartCount * ($chartGap + $titleHeight));
    margin: auto;
    position: relative;
}

.charts {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
}

.chart {
    &:not(:first-child) {
    margin-top: $chartGap;
    }
}

.chart__title {
    display: block;
    margin: 0 0 10px;
    font-weight: bold;
    opacity: 0;
    animation: 1s anim-lightspeed-in ease forwards;

    .chart--dev & {}
    .chart--prod & {
    animation-delay: 3.3s;
    }
    .chart--design & {
    animation-delay: 4.5s;
    }
}

.chart--horiz {
    overflow: hidden;
}

.chart__bar {
    $border-rad: 4px;
    height: $chartBarHeight;
    margin-bottom: $chartBarGap;

    background: linear-gradient(to left, #4cb8c4, #3cd3ad);
    border-top-right-radius: $border-rad;
    border-bottom-right-radius: $border-rad;
    opacity: 0;

    // animation: 1s anim-lightspeed-in ease forwards;

    .chart--dev & {
    @include stagger-anim-delay($chartOneCount, 1s, 0.2s);
    }
    .chart--prod & {
    @include stagger-anim-delay($chartTwoCount, 3.8s, 0.2s);
    }
    .chart--design & {
    @include stagger-anim-delay($chartThreeCount, 1s, 0.2s);
    }
}

.chart__label {
    padding-left: 10px;
    line-height: 30px;
    color: white;
}

//Keyframes
@keyframes anim-lightspeed-in {
    0% {
    transform: translateX(-200%);
    opacity: 1;
    }
    100% {
    transform: translateX(0);
    opacity: 1;
    }
}

.anim-lightspeed-in{
    animation: 1s anim-lightspeed-in ease forwards;
}
