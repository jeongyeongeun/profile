/*
 * Animation module with all animation code
 */
.anim-text-flow,
.anim-text-flow-hover:hover {
    /*
    * Animation variables
    */
    $animationSteps: 20;
    $animationDuration: 50;
    $animationElement: span;
    $animationElementsCount: 100;
    $delayBetweenLetters: 0.2;

    /*
    * Elements settings
    */
    #{$animationElement} {
        animation-name: anim-text-flow-keys;
        animation-duration: #{$animationDuration}s;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        animation-fill-mode: forwards;
    }

    /*
    * Keyframe loop
    */
    @keyframes anim-text-flow-keys {
        @for $i from 0 through $animationSteps {
       #{percentage($i * (1 / $animationSteps))} {
            color: hsla(random(365), 60, 60, 1);
        }
        }
    }

    @keyframes anim-text-flow-keys1 {
        @for $i from 0 through $animationSteps {
       #{percentage($i * (1 / $animationSteps))} {
            background-color: hsla(random(365), 60, 60, 1);
        }
        }
    }

    /*
    * Element animation delay loop
    */
   $totalDelayTime: $animationElementsCount * $delayBetweenLetters;

    @for $i from 1 through $animationElementsCount {
        #{$animationElement}:nth-of-type(#{$i}) {
       animation-delay: #{($i * $delayBetweenLetters) - $totalDelayTime}s;
        }
    }
}

.top_btn,
.top_btn:hover{
    /*
    * Animation variables
    */
    $animationSteps: 20;
    $animationDuration: 50;
    $animationElement: ".body";
    $animationElementsCount: 100;
    $delayBetweenLetters: 0.2;

    /*
    * Elements settings
    */
    #{$animationElement} {
        animation-name: anim-text-flow-keys1;
        animation-duration: #{$animationDuration}s;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        animation-fill-mode: forwards;
    }

    /*
    * Keyframe loop
    */

    @keyframes anim-text-flow-keys1 {
        @for $i from 0 through $animationSteps {
       #{percentage($i * (1 / $animationSteps))} {
            background-color: hsla(random(365), 60, 60, 1);
        }
        }
    }

    /*
    * Element animation delay loop
    */
   $totalDelayTime: $animationElementsCount * $delayBetweenLetters;

    @for $i from 1 through $animationElementsCount {
        #{$animationElement}:nth-of-type(#{$i}) {
       animation-delay: #{($i * $delayBetweenLetters) - $totalDelayTime}s;
        }
    }
}


// Í∑∏ÎûòÌîÑ Ïï†ÎãàÎ©îÏù¥ÏÖò

//Setup


@mixin stagger-anim-delay($i, $initial-delay, $stagger-delay) {
    @while $i > 0 {
    &:nth-of-type(#{$i}) {
      animation-delay: $initial-delay + $stagger-delay * $i;
    }
    $i: $i - 1;
    }
}

$baseFontSize: 16px;
$baseLineHeight: 1;

$chartGap: 10px;
$chartCount: 2;
$chartOneCount: 11;
$chartTwoCount: 2;
$chartThreeCount: 4;
$totalChartCount: $chartOneCount + $chartTwoCount + $chartThreeCount;

$titleGap: 10px;
$titleHeight: $baseFontSize * $baseLineHeight + $titleGap;

$chartBarHeight: 30px;
$chartBarGap: 10px;


//Demo
.skills {
    // width: 80%;
    // max-width: 1000px;
    // height: 500px;
    // height: $totalChartCount * ($chartBarHeight + $chartBarGap) + ($chartCount * ($chartGap + $titleHeight));
    margin: auto;
    position: relative;
}

.charts {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
    padding: 30px 0 0;
}

.chart {
    &:not(:first-child) {
    margin-top: $chartGap;
    }
}

.chart__title {
    display: block;
    margin: 0 10px 10px;
    // font-weight: bold;
    opacity: 0;
    animation: 1s anim-lightspeed-in ease forwards;
    animation-delay: 1s;

    .chart--dev & {
        // animation-delay: 1s;
    }

    .chart--design & {
    // animation-delay: 1.8s;
    }
}

.chart--horiz {
    overflow: hidden;
}

.chart__bar {
    background:linear-gradient(to left, #ebebeb, #bef);
    border-radius: 10px 50px 50px 10px;
    margin-bottom: 15px;
    height: 20px;
    width: 100%;
    display: flex;
    align-items: center;

    .chart--dev & {
    @include stagger-anim-delay($chartOneCount, 0.1s, 0.2s);
    }

    .chart--design & {
    @include stagger-anim-delay($chartThreeCount, 1s, 0.2s);
    }
}

.chart_title{
    display: inline-flex;
    width: 100px;
    background: #fff;
    margin-right: 5px;
}

.chart__label {
    // padding-left: 10px;
    opacity: 0;
    display: inline-flex;
    width: var(--width);
    height: 75%;
    background: tomato;
    border-radius: 10px 50px 50px 10px;
    font-size: 12px;
    line-height: 1;
    // margin-left: 5px;
}

//Keyframes
@keyframes anim-lightspeed-in {
    0% {
    width: 0;
    opacity: 1;
    }
    100% {
    width: var(--width);
    opacity: 1;
    }
}

.anim-lightspeed-in{
    animation: 1s anim-lightspeed-in ease forwards;
}

// ÌÉÄÏù¥ÌãÄ ÌÖçÏä§Ìä∏ ÌÉÄÏù¥Ìïë Ïï†ÎãàÎ©îÏù¥ÏÖò
@keyframes typing {
    from { width: 0; 
    }
    to   { width: 100%; 
    }
}

@keyframes blink-start {
    from, to { border-color: #ae274f; 
    }
    50% { border-color: transparent; 
    }
}

@keyframes blink-end {
    from, to { border-color: transparent; 
    }
    50% { border-color: transparent; 
    }
}

// 



#t{
    top: 30%;
    width: 100%;
}

:root {
    --interval: 0.8s;
    --duration: calc(var(--interval) * 4);
}

.tt-holder::before{
    content: "";
    display: block;
    width: 50px;
    height: 50px;
    margin: 0 auto;
    animation: bounce var(--interval) calc(var(--interval) / -2)
    cubic-bezier(0, 0, 0, 1) infinite,
    color var(--duration) calc(var(--interval) / -2) linear infinite;
}

@keyframes bounce {
    from,
    to {
        transform: translateY(-300%) scale(0.8);
        animation-timing-function: cubic-bezier(0, 0, 1, 0), linear;
    }
    50% {
        transform: none;
    }
}


@keyframes color {
    from,
    to {
        
        content: "üòä";
    }
    25% {
        
        content: "ü§£";
    }
    50% {
        
        content: "üòò";
    }
    75% {
        
        content: "üòé";
    }
}

.tt-holder{
    width: 100%;
    display: grid;
    grid-template-areas: "layer";
    opacity: 0;
    &.splitting {
        opacity: 1;
    }
    
    .tt {
    --delay: calc(var(--interval) * (var(--item-index)));
    --transform: translateX(0);
    overflow: hidden;
    position: absolute;
    display: block;
    grid-area: layer;
    top: -60px;
    width: 100%;
    height: 500px;
    font-size: 200px;
    font-family: "Raleway";

        &.splitting {
            animation: word-reveal var(--duration) linear both infinite,
            word-bounce var(--duration) ease both infinite;
            animation-delay: var(--delay);
        }

    @keyframes word-reveal {
        0%,
        25%,
        100% {
            visibility: hidden;
        }
        1%,
        24% {
            visibility: visible;
        }
    }

    @keyframes word-bounce {
        from,
        30%,
        to {
            transform: var(--transform);
        }
        12.5% {
            transform: translateY(30%) var(--transform);
        }
    }

    &.tt .char {
        animation: char-reveal var(--interval) cubic-bezier(0, 0, 0.2, 1) both infinite;
        animation-delay: var(--delay);

        @keyframes char-reveal {
            0% {
                transform: translateX(calc(-0.5em * var(--distance-sine)));
            }
            100% {
                transform: translateX(calc(0.25em * var(--distance-sine)))translateY(50%);
                }
            }
        }
    } 
}

.tt{
    // border-right: 3px solid #27ae60;


    // left: calc(50% - 300px);


    // --delay: calc(var(--interval) * (var(--item-index)));
    // --transform: translateX(0);

    // animation: word-reveal var(--duration) linear both infinite,
    // word-bounce var(--duration) ease both infinite;
    // animation-delay: var(--delay);
    // .char { 
    //     animation: char-reveal var(--interval) cubic-bezier(0, 0, 0.2, 1) both
    //     infinite;
    //     animation-delay: var(--delay);
    // }
}
.smile{
    transform: rotate(90deg);
    .word{
        position: relative;
        top: 50%;
        left: 40px;
        // left: calc(50% - 100px);
        width: 100px;
        height: 50px;
        border-radius: 50%;
        box-shadow: 0 15px 0 -10px #333;
        &::before,&::after{
            content: "";
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background: #333;
            animation: blinkEye 0.5s 0s linear infinite;
            }
        &::after{
            left: 80%;
            }
        @keyframes blinkEye {
            0%,
            60% {
                transform: scaleY(1);
            }
            30% {
                transform: scaleY(0);
            }
            
        }
    }
}

@keyframes char-reveal {
        0% {
          transform: translateX(calc(-0.5em * var(--distance-sine)));
        }
        100% {
          transform: translateX(calc(0.25em * var(--distance-sine)))
            translateY(50%);
        }
}
        // display: inline-block;
        // width: 78px; 

@keyframes word-reveal {
    0%,
    25%,
    100% {
        visibility: hidden;
    }
    1%,
    24% {
        visibility: visible;
    }
}

@keyframes word-bounce {
    from,
    30%,
    to {
        transform: var(--transform);
    }
    12.5% {
        transform: translateY(30%) var(--transform);
    }
}
@media (max-width: 768px){
    .tt{
        span{
            width: 50px;
        }
    }
}

// cursor
.cursor {
    width: var(--size);
    height: var(--size);
    border-radius: 50%;
    background: white;
    position: fixed;
    z-index: 99999;
    pointer-events: none;
    mix-blend-mode: difference;

    &-f {
        width: var(--size);
        height: var(--size);
        position: fixed;
        top: 0;
        left: 0;
        background-image: url("data:image/svg+xml,%3Csvg width='47' height='47' viewBox='0 0 47 47' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M42.4202 42.4202C38.8403 46 33.3594 46 23.5 46C13.6406 46 8.15966 46 4.57983 42.4202C1 38.8403 1 33.3594 1 23.5C1 13.6406 1 8.15966 4.57983 4.57983C8.15966 1 13.6406 1 23.5 1C33.3594 1 38.8403 1 42.4202 4.57983C46 8.15966 46 13.6406 46 23.5C46 33.3594 46 38.8403 42.4202 42.4202Z' stroke='white'/%3E%3C/svg%3E%0A");
        background-size: cover;
        mix-blend-mode: difference;
        pointer-events: none;
        opacity: .5;
    }
}

// neon

section a{
    position: relative;
    overflow: hidden;
    &:hover,&:focus{
        background: #03e9f4;
        color: #050801;
        box-shadow: 0 0 5px #03e9f4,
                    0 0 25px #03e9f4,
                    0 0 50px #03e9f4,
                    0 0 200px #03e9f4;
        -webkit-box-reflect:below 1px linear-gradient(transparent, #0005);
    }
}

section a:nth-child(1){
    filter: hue-rotate(270deg);
}
section a:nth-child(2){
    filter: hue-rotate(110deg);
}
a span{
    position: absolute;
    display: block;
}
a span:nth-of-type(1){
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg,transparent,#03e9f4);
    animation: animate1 1s linear infinite;
}
@keyframes animate1{
    0%{
        left: -100%;
    }
    50%,100%{
        left: 100%;
    }
}
a span:nth-of-type(2){
    top: -100%;
    right: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(180deg,transparent,#03e9f4);
    animation: animate2 1s linear infinite;
    animation-delay: 0.25s;
}
@keyframes animate2{
    0%{
        top: -100%;
    }
    50%,100%{
        top: 100%;
    }
}
a span:nth-of-type(3){
    bottom: 0;
    right: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(270deg,transparent,#03e9f4);
    animation: animate3 1s linear infinite;
    animation-delay: 0.50s;
}
@keyframes animate3{
    0%{
        right: -100%;
    }
    50%,100%{
        right: 100%;
    }
}


a span:nth-of-type(4){
    bottom: -100%;
    left: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(360deg,transparent,#03e9f4);
    animation: animate4 1s linear infinite;
    animation-delay: 0.75s;
}
@keyframes animate4{
    0%{
        bottom: -100%;
    }
    50%,100%{
        bottom: 100%;
    }
}

// Î©îÌÉÄÎ™Ω

.metamon2{
    position: absolute;
    top: -15px;
    width: 300px;
    height: 300px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #fff;
}
    .body{
        width: 100px;
        height: 100px;
        display: flex;
        align-items: center;
        // justify-content: center;
        flex-direction: column;
        background: #deccfe;
        border-radius: 50%;
        .eye{
            position: relative;
            top: 30px;
            width: 40%;
            display: flex;
            justify-content: space-between;
            &::before,&::after{
                content: "";
                display: block;
                width: 8px;
                height: 8px;
                border-radius: 50%;
                background: #555;
                animation: blinkEye 0.8s 3s ease-in-out infinite alternate;
    
            }

        }
        .mouth{
            position: relative;
            top: 0%;
            width: 90px;
            height: 50px;
            border-radius: 50%;
            box-shadow: 0 15px 0 -10px #555;
        }

    }


// ÌÖçÏä§Ìä∏Î∞îÏö¥Ïä§

@keyframes floatText {
    0%,100%{ transform:none; }
    33%{ transform:translateY(-1px) rotate(-2deg); }
    66%{ transform:translateY(1px) rotate(2deg); }
}

@keyframes textBounce {
    0%,100%{ transform:translate(0); }
    25%{ transform:rotateX(20deg) translateY(2px) rotate(-3deg); }
    50%{ transform:translateY(-20px) rotate(3deg) scale(1.1);  }
}

.text_bounce .char{
    animation: floatText 1s cubic-bezier(.5, 0, .5, 1) both infinite alternate;
    animation-delay: calc(60ms * var(--char-index));
}